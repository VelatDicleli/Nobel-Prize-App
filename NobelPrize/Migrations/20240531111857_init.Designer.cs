// <auto-generated />
using System;
using DataAccess.Ef_Core.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace NobelPrize.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240531111857_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Award", b =>
                {
                    b.Property<int>("AwardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AwardId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AwardId");

                    b.HasIndex("DescriptorName")
                        .IsUnique();

                    b.ToTable("Award");

                    b.HasData(
                        new
                        {
                            AwardId = 1,
                            Category = "Physics",
                            DescriptorName = "Nobel Prize in Physics"
                        },
                        new
                        {
                            AwardId = 2,
                            Category = "Chemistry",
                            DescriptorName = "Nobel Prize in Chemistry"
                        },
                        new
                        {
                            AwardId = 3,
                            Category = "Physiology or Medicine",
                            DescriptorName = "Nobel Prize in Physiology or Medicine"
                        },
                        new
                        {
                            AwardId = 4,
                            Category = "Mathematics",
                            DescriptorName = "Fields Medal in Mathematics"
                        },
                        new
                        {
                            AwardId = 5,
                            Category = "Computer Science",
                            DescriptorName = "Turing Award in Computer Science"
                        });
                });

            modelBuilder.Entity("Entities.Candidate", b =>
                {
                    b.Property<int>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CandidateId"));

                    b.Property<DateTime>("CandidacyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CandidacyNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FieldOfScience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CandidateId");

                    b.HasIndex("CandidacyNumber")
                        .IsUnique();

                    b.ToTable("Candidate");

                    b.HasData(
                        new
                        {
                            CandidateId = 2,
                            CandidacyDate = new DateTime(1950, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CandidacyNumber = 78586646,
                            DateOfBirth = new DateTime(1867, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FieldOfScience = "Chemistry",
                            FirstName = "Marie",
                            LastName = "Curie",
                            Nationality = "Polish"
                        },
                        new
                        {
                            CandidateId = 3,
                            CandidacyDate = new DateTime(1975, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CandidacyNumber = 9864753,
                            DateOfBirth = new DateTime(1950, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FieldOfScience = "Medicine",
                            FirstName = "John",
                            LastName = "Doe",
                            Nationality = "American"
                        },
                        new
                        {
                            CandidateId = 4,
                            CandidacyDate = new DateTime(1988, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CandidacyNumber = 3548468,
                            DateOfBirth = new DateTime(1815, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FieldOfScience = "Computer Science",
                            FirstName = "Ada",
                            LastName = "Lovelace",
                            Nationality = "British"
                        },
                        new
                        {
                            CandidateId = 5,
                            CandidacyDate = new DateTime(1954, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CandidacyNumber = 235456,
                            DateOfBirth = new DateTime(1912, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FieldOfScience = "Mathematics",
                            FirstName = "Alan",
                            LastName = "Turing",
                            Nationality = "British"
                        },
                        new
                        {
                            CandidateId = 6,
                            CandidacyDate = new DateTime(1921, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CandidacyNumber = 9848546,
                            DateOfBirth = new DateTime(1867, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FieldOfScience = "Physics",
                            FirstName = "Marie",
                            LastName = "Skłodowska",
                            Nationality = "Polish"
                        },
                        new
                        {
                            CandidateId = 7,
                            CandidacyDate = new DateTime(1910, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CandidacyNumber = 78594546,
                            DateOfBirth = new DateTime(1856, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FieldOfScience = "Engineering",
                            FirstName = "Nikola",
                            LastName = "Tesla",
                            Nationality = "Serbian"
                        },
                        new
                        {
                            CandidateId = 8,
                            CandidacyDate = new DateTime(1903, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CandidacyNumber = 65654478,
                            DateOfBirth = new DateTime(1867, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FieldOfScience = "Physics",
                            FirstName = "Marie",
                            LastName = "Curie",
                            Nationality = "Polish"
                        },
                        new
                        {
                            CandidateId = 9,
                            CandidacyDate = new DateTime(1965, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CandidacyNumber = 87546,
                            DateOfBirth = new DateTime(1918, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FieldOfScience = "Physics",
                            FirstName = "Richard",
                            LastName = "Feynman",
                            Nationality = "American"
                        },
                        new
                        {
                            CandidateId = 10,
                            CandidacyDate = new DateTime(2009, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CandidacyNumber = 3546568,
                            DateOfBirth = new DateTime(1939, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FieldOfScience = "Chemistry",
                            FirstName = "Ada",
                            LastName = "Yonath",
                            Nationality = "Israeli"
                        },
                        new
                        {
                            CandidateId = 11,
                            CandidacyDate = new DateTime(1922, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CandidacyNumber = 5654564,
                            DateOfBirth = new DateTime(1879, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FieldOfScience = "Physics",
                            FirstName = "Albert",
                            LastName = "Einstein",
                            Nationality = "Swiss"
                        },
                        new
                        {
                            CandidateId = 12,
                            CandidacyDate = new DateTime(1905, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CandidacyNumber = 78485546,
                            DateOfBirth = new DateTime(1867, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FieldOfScience = "Physics",
                            FirstName = "Marie",
                            LastName = "Curie",
                            Nationality = "Polish"
                        });
                });

            modelBuilder.Entity("Entities.Candidate_Award", b =>
                {
                    b.Property<int?>("CandidateId")
                        .HasColumnType("int");

                    b.Property<int?>("AwardId")
                        .HasColumnType("int");

                    b.HasKey("CandidateId", "AwardId");

                    b.HasIndex("AwardId");

                    b.ToTable("Candidate_Award");

                    b.HasData(
                        new
                        {
                            CandidateId = 2,
                            AwardId = 1
                        },
                        new
                        {
                            CandidateId = 3,
                            AwardId = 2
                        },
                        new
                        {
                            CandidateId = 4,
                            AwardId = 4
                        },
                        new
                        {
                            CandidateId = 5,
                            AwardId = 2
                        },
                        new
                        {
                            CandidateId = 6,
                            AwardId = 3
                        },
                        new
                        {
                            CandidateId = 7,
                            AwardId = 5
                        },
                        new
                        {
                            CandidateId = 8,
                            AwardId = 3
                        },
                        new
                        {
                            CandidateId = 8,
                            AwardId = 1
                        });
                });

            modelBuilder.Entity("Entities.Candidate_Committee", b =>
                {
                    b.Property<int?>("CandidateId")
                        .HasColumnType("int");

                    b.Property<int?>("CommitteeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EvaluationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Result")
                        .HasColumnType("bit");

                    b.HasKey("CandidateId", "CommitteeId");

                    b.HasIndex("CommitteeId");

                    b.ToTable("Candidate_Committee");

                    b.HasData(
                        new
                        {
                            CandidateId = 2,
                            CommitteeId = 2,
                            EvaluationDate = new DateTime(2023, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Result = false
                        },
                        new
                        {
                            CandidateId = 3,
                            CommitteeId = 3,
                            EvaluationDate = new DateTime(2023, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Result = true
                        },
                        new
                        {
                            CandidateId = 4,
                            CommitteeId = 4,
                            EvaluationDate = new DateTime(2023, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Result = false
                        },
                        new
                        {
                            CandidateId = 5,
                            CommitteeId = 5,
                            EvaluationDate = new DateTime(2023, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Result = true
                        },
                        new
                        {
                            CandidateId = 6,
                            CommitteeId = 1,
                            EvaluationDate = new DateTime(2023, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Result = false
                        },
                        new
                        {
                            CandidateId = 7,
                            CommitteeId = 5,
                            EvaluationDate = new DateTime(2023, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Result = true
                        },
                        new
                        {
                            CandidateId = 8,
                            CommitteeId = 1,
                            EvaluationDate = new DateTime(2023, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Result = false
                        },
                        new
                        {
                            CandidateId = 9,
                            CommitteeId = 5,
                            EvaluationDate = new DateTime(2023, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Result = true
                        });
                });

            modelBuilder.Entity("Entities.Candidate_Organization", b =>
                {
                    b.Property<int?>("CandidateId")
                        .HasColumnType("int");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("CandidateId", "OrganizationId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Candidate_Organization");

                    b.HasData(
                        new
                        {
                            CandidateId = 2,
                            OrganizationId = 2
                        },
                        new
                        {
                            CandidateId = 3,
                            OrganizationId = 3
                        },
                        new
                        {
                            CandidateId = 4,
                            OrganizationId = 4
                        },
                        new
                        {
                            CandidateId = 5,
                            OrganizationId = 5
                        },
                        new
                        {
                            CandidateId = 6,
                            OrganizationId = 6
                        });
                });

            modelBuilder.Entity("Entities.Committee", b =>
                {
                    b.Property<int>("CommitteeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommitteeId"));

                    b.Property<string>("CommitteeCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommitteeId");

                    b.ToTable("Committee");

                    b.HasData(
                        new
                        {
                            CommitteeId = 1,
                            CommitteeCategory = "Physics Committee"
                        },
                        new
                        {
                            CommitteeId = 2,
                            CommitteeCategory = "Chemistry Committee"
                        },
                        new
                        {
                            CommitteeId = 3,
                            CommitteeCategory = "Physiology and Medicine Committee"
                        },
                        new
                        {
                            CommitteeId = 4,
                            CommitteeCategory = "Mathematics Committee"
                        },
                        new
                        {
                            CommitteeId = 5,
                            CommitteeCategory = "Computer Science Committee"
                        },
                        new
                        {
                            CommitteeId = 9,
                            CommitteeCategory = "Physiology and Medicine Committee"
                        },
                        new
                        {
                            CommitteeId = 8,
                            CommitteeCategory = "Mathematics Committee"
                        },
                        new
                        {
                            CommitteeId = 7,
                            CommitteeCategory = "Computer Science Committee"
                        });
                });

            modelBuilder.Entity("Entities.Expert", b =>
                {
                    b.Property<int>("ExpertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpertId"));

                    b.Property<int>("CommitteeId")
                        .HasColumnType("int");

                    b.Property<string>("ExpertField")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpertFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpertLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpertId");

                    b.HasIndex("CommitteeId");

                    b.ToTable("Expert");

                    b.HasData(
                        new
                        {
                            ExpertId = 1,
                            CommitteeId = 1,
                            ExpertField = "Physics",
                            ExpertFirstName = "John",
                            ExpertLastName = "Smith"
                        },
                        new
                        {
                            ExpertId = 2,
                            CommitteeId = 2,
                            ExpertField = "Chemistry",
                            ExpertFirstName = "Emily",
                            ExpertLastName = "Brown"
                        },
                        new
                        {
                            ExpertId = 3,
                            CommitteeId = 3,
                            ExpertField = "Physiology and Medicine",
                            ExpertFirstName = "Michael",
                            ExpertLastName = "Johnson"
                        },
                        new
                        {
                            ExpertId = 4,
                            CommitteeId = 4,
                            ExpertField = "Mathematics",
                            ExpertFirstName = "David",
                            ExpertLastName = "Williams"
                        },
                        new
                        {
                            ExpertId = 5,
                            CommitteeId = 5,
                            ExpertField = "Computer Science",
                            ExpertFirstName = "Sophia",
                            ExpertLastName = "Davis"
                        },
                        new
                        {
                            ExpertId = 6,
                            CommitteeId = 1,
                            ExpertField = "Physics",
                            ExpertFirstName = "James",
                            ExpertLastName = "Martinez"
                        },
                        new
                        {
                            ExpertId = 7,
                            CommitteeId = 2,
                            ExpertField = "Chemistry",
                            ExpertFirstName = "Emma",
                            ExpertLastName = "Wilson"
                        },
                        new
                        {
                            ExpertId = 8,
                            CommitteeId = 3,
                            ExpertField = "Physiology and Medicine",
                            ExpertFirstName = "Alexander",
                            ExpertLastName = "Anderson"
                        },
                        new
                        {
                            ExpertId = 9,
                            CommitteeId = 4,
                            ExpertField = "Mathematics",
                            ExpertFirstName = "Olivia",
                            ExpertLastName = "Thomas"
                        },
                        new
                        {
                            ExpertId = 10,
                            CommitteeId = 5,
                            ExpertField = "Computer Science",
                            ExpertFirstName = "Daniel",
                            ExpertLastName = "Taylor"
                        },
                        new
                        {
                            ExpertId = 11,
                            CommitteeId = 1,
                            ExpertField = "Physics",
                            ExpertFirstName = "William",
                            ExpertLastName = "Lee"
                        },
                        new
                        {
                            ExpertId = 12,
                            CommitteeId = 2,
                            ExpertField = "Chemistry",
                            ExpertFirstName = "Lily",
                            ExpertLastName = "Garcia"
                        },
                        new
                        {
                            ExpertId = 13,
                            CommitteeId = 3,
                            ExpertField = "Physiology and Medicine",
                            ExpertFirstName = "Matthew",
                            ExpertLastName = "Rodriguez"
                        },
                        new
                        {
                            ExpertId = 14,
                            CommitteeId = 4,
                            ExpertField = "Mathematics",
                            ExpertFirstName = "Sophie",
                            ExpertLastName = "Hernandez"
                        },
                        new
                        {
                            ExpertId = 15,
                            CommitteeId = 5,
                            ExpertField = "Computer Science",
                            ExpertFirstName = "Ethan",
                            ExpertLastName = "Young"
                        },
                        new
                        {
                            ExpertId = 16,
                            CommitteeId = 1,
                            ExpertField = "Physics",
                            ExpertFirstName = "Isabella",
                            ExpertLastName = "Moore"
                        });
                });

            modelBuilder.Entity("Entities.Organization", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrganizationId"));

                    b.Property<string>("ContactInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrganizationId");

                    b.HasIndex("ContactInformation")
                        .IsUnique();

                    b.ToTable("Organization");

                    b.HasData(
                        new
                        {
                            OrganizationId = 2,
                            ContactInformation = "Info@nobellprize.se",
                            Location = "Sweden",
                            Name = "Stockholm Nobel Committee"
                        },
                        new
                        {
                            OrganizationId = 3,
                            ContactInformation = "nobelassembly@ki.se",
                            Location = "Sweden",
                            Name = "Nobel Assembly at Karolinska Institutet"
                        },
                        new
                        {
                            OrganizationId = 4,
                            ContactInformation = "info@kva.se",
                            Location = "Sweden",
                            Name = "Royal Swedish Academy of Sciences"
                        },
                        new
                        {
                            OrganizationId = 5,
                            ContactInformation = "post@nobelpeacecenter.org",
                            Location = "Norway",
                            Name = "Nobel Peace Center"
                        },
                        new
                        {
                            OrganizationId = 6,
                            ContactInformation = "info@nobelprize.org",
                            Location = "Sweden",
                            Name = "The Nobel Foundation"
                        });
                });

            modelBuilder.Entity("Entities.Candidate_Award", b =>
                {
                    b.HasOne("Entities.Award", "Award")
                        .WithMany("CandidateAwards")
                        .HasForeignKey("AwardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Candidate", "Candidate")
                        .WithMany("CandidateAwards")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Award");

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("Entities.Candidate_Committee", b =>
                {
                    b.HasOne("Entities.Candidate", "Candidate")
                        .WithMany("CandidateCommittees")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Committee", "Committee")
                        .WithMany("CommitteeCandidates")
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Committee");
                });

            modelBuilder.Entity("Entities.Candidate_Organization", b =>
                {
                    b.HasOne("Entities.Candidate", "Candidate")
                        .WithMany("CandidateOrganizations")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Organization", "Organization")
                        .WithMany("OrganizationCandidates")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Entities.Expert", b =>
                {
                    b.HasOne("Entities.Committee", "Committee")
                        .WithMany("Experts")
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Committee");
                });

            modelBuilder.Entity("Entities.Award", b =>
                {
                    b.Navigation("CandidateAwards");
                });

            modelBuilder.Entity("Entities.Candidate", b =>
                {
                    b.Navigation("CandidateAwards");

                    b.Navigation("CandidateCommittees");

                    b.Navigation("CandidateOrganizations");
                });

            modelBuilder.Entity("Entities.Committee", b =>
                {
                    b.Navigation("CommitteeCandidates");

                    b.Navigation("Experts");
                });

            modelBuilder.Entity("Entities.Organization", b =>
                {
                    b.Navigation("OrganizationCandidates");
                });
#pragma warning restore 612, 618
        }
    }
}
